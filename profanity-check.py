from profanity_check import predict, predict_prob

#https://www.youtube.com/watch?v=A5dE25ANU0k&t=269s

from youtube_transcript_api import YouTubeTranscriptApi

import sys
# YouTubeTranscriptApi.get_transcript('A5dE25ANU0k')
# retrieve the available transcripts
#tH6mlQ7olak
#MuxnH0VAkAM

#https://youtu.be/_AjJNpmyyEY

#!/usr/bin/python
url = sys.argv[1:][0]
print(url)
video_id = ''

if 'v=' in url:
    print('1')
    video_id = url.rsplit('v=', 1)[-1]
else:
    print('2')
    video_id = url.rsplit('/', 1)[-1]

print(video_id)

#if video_id != '':
    
    
transcript_list = YouTubeTranscriptApi.get_transcript(video_id)

text = ''
highest_prob = 0
highest_prob_text = ''
prob = 0
pred = 0
# iterate over all available transcripts
for transcript in transcript_list:

    # the Transcript object provides metadata properties
    #print(
        # transcript.video_id,
        # transcript.language,
        # transcript.language_code,
        # whether it has been manually created or generated by YouTube
        # transcript.is_generated,
        # whether this transcript can be translated or not
        # transcript.is_translatable,
        # a list of languages the transcript can be translated to
        # transcript.translation_languages,
        #transcript['text']
        
    #)
    text = transcript['text']
    prob = predict_prob([text])
    pred = predict([text])
    
    if prob > highest_prob:
        highest_prob = prob
        highest_prob_text = text
        
    if pred > 0 or prob > .5:
        print('probability ', pred, prob)
        print(text)
        
    #print(predict(['predict() takes an array and returns a 1 for each string if it is offensive, else 0.']))
    # [0]

print('highest probability: ')
print(highest_prob)
print(highest_prob_text)
    #print(predict([transcript['text']]))

    #print(predict_prob([transcript['text']]))
    #print(predict(['fuck you']))
    # [1]

    #print(predict_prob(['predict_prob() takes an array and returns the probability each string is offensive']))
    # [0.08686173]

    #print(predict_prob(['go to hell, you scum']))
    # [0.7618861]

    # fetch the actual transcript data
    # print(transcript.fetch())

    # translating the transcript will return another transcript object
    # print(transcript.translate('en').fetch())

# you can also directly filter for the language you are looking for, using the transcript list
# transcript = transcript_list.find_transcript(['de', 'en'])  

# or just filter for manually created transcripts  
# transcript = transcript_list.find_manually_created_transcript(['de', 'en'])  

# or automatically generated ones  
# transcript = transcript_list.find_generated_transcript(['de', 'en'])

#https://www.youtube.com/watch?v=MuxnH0VAkAM
